local Library = loadstring(Game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()

local PhantomForcesWindow = Library:NewWindow("Don't Press The Button")

local KillingCheats = PhantomForcesWindow:NewSection("Main")

local Player = PhantomForcesWindow:NewSection("Player")

local Esp = PhantomForcesWindow:NewSection("Esp")

-- Button --

--// Services
local Players = game:GetService("Players")
local lp = Players.LocalPlayer

--// Toggle điều khiển
local autoTeleport = false
local currentIndex = 1

--// Danh sách tên model cần teleport đến
local targetModelNames = { "SpinningCoin", "Coin" }

--// Hàm lấy toàn bộ model đúng tên đang tồn tại và hiển thị
local function getVisibleCoins()
	local allCoins = {}
	for _, model in ipairs(workspace:GetDescendants()) do
		if model:IsA("Model") then
			for _, name in ipairs(targetModelNames) do
				if model.Name == name then
					local part = model:FindFirstChildWhichIsA("BasePart")
					if part and part.Transparency < 1 and part:IsDescendantOf(workspace) then
						table.insert(allCoins, part)
					end
				end
			end
		end
	end
	return allCoins
end

--// Tích hợp Toggle Fluent
KillingCheats:CreateToggle("Auto Farm Coin", function(value)
	autoTeleport = value
	print("Auto Farm Coin:", value)
	currentIndex = 1
end)

--// Vòng lặp dịch chuyển luân phiên giữa tất cả coin đang hiện
task.spawn(function()
	while true do
		if autoTeleport then
			local root = lp.Character and lp.Character:FindFirstChild("HumanoidRootPart")
			if root then
				local coins = getVisibleCoins()

				if #coins > 0 then
					if currentIndex > #coins then
						currentIndex = 1
					end

					local target = coins[currentIndex]
					if target then
						root.CFrame = target.CFrame + Vector3.new(0, 3, 0)
						currentIndex += 1
					end
				end
			end
		end
		task.wait(0.1) -- delay giữa mỗi lần teleport
	end
end)





--// Services
local Players = game:GetService("Players")
local lp = Players.LocalPlayer

--// Toggle điều khiển
local autoTeleport = false
local currentIndex = 1

--// Hàm lấy toàn bộ Fireworks đang tồn tại và còn hiển thị
local function getVisibleFireworks()
	local fireworks = {}
	for _, model in ipairs(workspace:GetDescendants()) do
		if model:IsA("Model") and model.Name == "Fireworks" then
			local part = model:FindFirstChildWhichIsA("BasePart")
			if part and part.Transparency < 1 and part:IsDescendantOf(workspace) then
				table.insert(fireworks, part)
			end
		end
	end
	return fireworks
end

--// Tích hợp vào Toggle Start Trade
KillingCheats:CreateToggle("Find Fireworks", function(value)
	autoTeleport = value
	print("Find Fireworks:", value)
	currentIndex = 1
end)

--// Vòng lặp teleport luân phiên qua các Fireworks
task.spawn(function()
	while true do
		if autoTeleport then
			local root = lp.Character and lp.Character:FindFirstChild("HumanoidRootPart")
			if root then
				local fireworks = getVisibleFireworks()

				if #fireworks > 0 then
					if currentIndex > #fireworks then
						currentIndex = 1
					end

					local target = fireworks[currentIndex]
					if target then
						root.CFrame = target.CFrame + Vector3.new(0, 3, 0)
						currentIndex += 1
					end
				end
			end
		end
		task.wait(0.1) -- thời gian giữa các lần dịch chuyển
	end
end)





--// Services
local Players = game:GetService("Players")
local lp = Players.LocalPlayer

--// Toggle điều khiển
local autoTeleport = false
local currentIndex = 1

--// Hàm lấy toàn bộ Bucket đang tồn tại và còn hiển thị
local function getVisibleBuckets()
	local buckets = {}
	for _, model in ipairs(workspace:GetDescendants()) do
		if model:IsA("Model") and model.Name == "Bucket" then
			local part = model:FindFirstChildWhichIsA("BasePart")
			if part and part.Transparency < 1 and part:IsDescendantOf(workspace) then
				table.insert(buckets, part)
			end
		end
	end
	return buckets
end

--// Tích hợp vào Toggle Start Trade
KillingCheats:CreateToggle("Find Bucket", function(value)
	autoTeleport = value
	print("Find Bucket:", value)
	currentIndex = 1
end)

--// Vòng lặp teleport luân phiên qua các Bucket
task.spawn(function()
	while true do
		if autoTeleport then
			local root = lp.Character and lp.Character:FindFirstChild("HumanoidRootPart")
			if root then
				local buckets = getVisibleBuckets()

				if #buckets > 0 then
					if currentIndex > #buckets then
						currentIndex = 1
					end

					local target = buckets[currentIndex]
					if target then
						root.CFrame = target.CFrame + Vector3.new(0, 3, 0)
						currentIndex += 1
					end
				end
			end
		end
		task.wait(0.1)
	end
end)


--// Services
local Players = game:GetService("Players")
local lp = Players.LocalPlayer

--// Toggle điều khiển
local autoTeleport = false
local currentIndex = 1

--// Danh sách tên model cần teleport đến
local targetModelNames = { "Candy" }

--// Hàm lấy toàn bộ model đúng tên đang tồn tại và hiển thị
local function getVisibleCandy()
	local allCandy = {}
	for _, model in ipairs(workspace:GetDescendants()) do
		if model:IsA("Model") then
			for _, name in ipairs(targetModelNames) do
				if model.Name == name then
					local part = model:FindFirstChildWhichIsA("BasePart")
					if part and part.Transparency < 1 and part:IsDescendantOf(workspace) then
						table.insert(allCandy, part)
					end
				end
			end
		end
	end
	return allCandy
end

--// Tích hợp Toggle Fluent
KillingCheats:CreateToggle("Find All Candy", function(value)
	autoTeleport = value
	print("Auto Find Candy:", value)
	currentIndex = 1
end)

--// Vòng lặp dịch chuyển luân phiên giữa tất cả coin đang hiện
task.spawn(function()
	while true do
		if autoTeleport then
			local root = lp.Character and lp.Character:FindFirstChild("HumanoidRootPart")
			if root then
				local Candy = getVisibleCandy()

				if #Candy > 0 then
					if currentIndex > #Candy then
						currentIndex = 1
					end

					local target = Candy[currentIndex]
					if target then
						root.CFrame = target.CFrame + Vector3.new(0, 3, 0)
						currentIndex += 1
					end
				end
			end
		end
		task.wait(0.1) -- delay giữa mỗi lần teleport
	end
end)


-- Player

--// Services
local Players = game:GetService("Players")
local lp = Players.LocalPlayer

--// Biến điều khiển
local speedEnabled = false
local speedValue = 16 -- mặc định

--// Toggle bật/tắt tăng tốc
Player:CreateToggle("Walk Speed", function(value)
	speedEnabled = value
	print("Walk Speed Enabled:", value)

	local char = lp.Character
	if char and char:FindFirstChild("Humanoid") then
		char.Humanoid.WalkSpeed = value and speedValue or 16
	end
end)

--// TextBox nhập tốc độ thủ công (thay vì slider)
Player:CreateTextbox("Speed (1 - 300)", function(text)
	local number = tonumber(text)
	if number and number >= 1 and number <= 300 then
		speedValue = number
		print("Speed set to:", speedValue)

		if speedEnabled then
			local char = lp.Character
			if char and char:FindFirstChild("Humanoid") then
				char.Humanoid.WalkSpeed = speedValue
			end
		end
	else
		warn("Invalid speed input! Must be a number between 1 and 300.")
	end
end)

--// Cập nhật lại khi nhân vật respawn
lp.CharacterAdded:Connect(function(char)
	char:WaitForChild("Humanoid")
	task.wait(0.1)
	char.Humanoid.WalkSpeed = speedEnabled and speedValue or 16
end)




local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")

local player = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- State
local flying = false
local flySpeed = 50
local renderConn

-- Function: Attach Body Movers
local function attachBodyMovers(character)
	local humanoid = character:WaitForChild("Humanoid")
	local HRP = character:WaitForChild("HumanoidRootPart")
	
	-- Clean old
	if HRP:FindFirstChild("BodyVelocity") then HRP.BodyVelocity:Destroy() end
	if HRP:FindFirstChild("BodyGyro") then HRP.BodyGyro:Destroy() end

	local bv = Instance.new("BodyVelocity")
	bv.MaxForce = Vector3.new(1e6, 1e6, 1e6)
	bv.Velocity = Vector3.zero
	bv.Name = "BodyVelocity"
	bv.Parent = HRP

	local bg = Instance.new("BodyGyro")
	bg.MaxTorque = Vector3.new(1e6, 1e6, 1e6)
	bg.CFrame = HRP.CFrame
	bg.Name = "BodyGyro"
	bg.Parent = HRP

	humanoid:ChangeState(Enum.HumanoidStateType.Physics)

	return bv, bg
end

-- Function: Start Flying
local function startFlying()
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")

	if humanoid.Health <= 0 then return end

	local HRP = character:WaitForChild("HumanoidRootPart")
	local bv, bg = attachBodyMovers(character)

	-- Start render loop
	renderConn = RunService.RenderStepped:Connect(function()
		if not flying or humanoid.Health <= 0 then return end
		local moveDir = humanoid.MoveDirection
		local camCF = Camera.CFrame
		local moveVec = Vector3.zero

		if moveDir.Magnitude > 0 then
			local forward = camCF.LookVector
			local flatForward = Vector3.new(forward.X, 0, forward.Z).Unit
			local verticalInfluence = forward.Unit.Y

			local movingForward = flatForward:Dot(moveDir.Unit) > 0.1
			local movingBackward = flatForward:Dot(moveDir.Unit) < -0.1

			local yVelocity = 0
			if movingForward then yVelocity = verticalInfluence
			elseif movingBackward then yVelocity = -verticalInfluence end

			moveVec = Vector3.new(moveDir.X, yVelocity, moveDir.Z).Unit
		end

		if bv and bg then
			bv.Velocity = moveVec * flySpeed
			bg.CFrame = camCF
		end
	end)

	flying = true
end

-- Function: Stop Flying
local function stopFlying()
	flying = false
	if renderConn then renderConn:Disconnect() renderConn = nil end

	local character = player.Character
	if character then
		local HRP = character:FindFirstChild("HumanoidRootPart")
		if HRP then
			if HRP:FindFirstChild("BodyVelocity") then HRP.BodyVelocity:Destroy() end
			if HRP:FindFirstChild("BodyGyro") then HRP.BodyGyro:Destroy() end
		end

		local humanoid = character:FindFirstChildOfClass("Humanoid")
		if humanoid then
			humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
		end
	end
end

-- Handle respawn (ensure re-attach body movers if flying)
player.CharacterAdded:Connect(function()
	task.wait(0.5)
	if flying then
		startFlying()
	end
end)

-- UI Button
Player:CreateToggle("Fly (Mobile + PC)", function(value)
	if value then
		startFlying()
	else
		stopFlying()
	end
end)

Player:CreateTextbox("Fly Speed", function(text)
	local num = tonumber(text)
	if num and num > 0 then
		flySpeed = num
	else
		warn("Invalid fly speed:", text)
	end
end)





--// Biến trạng thái
local noclipEnabled = false

--// Toggle Noclip
Player:CreateToggle("Noclip", function(value)
    noclipEnabled = value
    print("Noclip Enabled:", value)
end)

--// Hàm chính để duy trì Noclip nếu được bật
game:GetService("RunService").Stepped:Connect(function()
    if noclipEnabled then
        local character = game:GetService("Players").LocalPlayer.Character
        if character then
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") and part.CanCollide == true then
                    part.CanCollide = false
                end
            end
        end
    end
end)





--// Infinite Jump Toggle
Player:CreateToggle("Infinite Jump", function(state)
    getgenv().InfiniteJump = state
    print("Infinite Jump Enabled:", state)
end)

--// Infinite Jump Handler
game:GetService("UserInputService").JumpRequest:Connect(function()
    if getgenv().InfiniteJump then
        local lp = game:GetService("Players").LocalPlayer
        local char = lp.Character
        if char and char:FindFirstChild("Humanoid") then
            char.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)


-- Esp

--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- ESP Container
local drawings = {}
local espConnection

-- Tạo ESP cho Player
local function createESP(player)
    if player == LocalPlayer then return end
    if drawings[player] then return end

    local text = Drawing.new("Text")
    text.Size = 14
    text.Center = true
    text.Outline = true
    text.Visible = false

    drawings[player] = text
end

-- Xoá ESP
local function removeESP(player)
    if drawings[player] then
        drawings[player]:Remove()
        drawings[player] = nil
    end
end

-- Bắt đầu ESP
local function startESP()
    for _, player in ipairs(Players:GetPlayers()) do
        createESP(player)
    end

    Players.PlayerAdded:Connect(createESP)
    Players.PlayerRemoving:Connect(removeESP)

    espConnection = RunService.RenderStepped:Connect(function()
        for player, text in pairs(drawings) do
            local character = player.Character
            local hrp = character and character:FindFirstChild("HumanoidRootPart")
            local humanoid = character and character:FindFirstChildOfClass("Humanoid")

            if hrp and humanoid and humanoid.Health > 0 then
                local pos, visible = Camera:WorldToViewportPoint(hrp.Position + Vector3.new(0, 2.5, 0))
                local distance = (hrp.Position - Camera.CFrame.Position).Magnitude
                text.Text = string.format("%s [%.0fm]", player.Name, distance)

                -- Kiểm tra nếu player có Knife
                local hasKnife = false
                local backpack = player:FindFirstChildOfClass("Backpack")
                local characterTools = character:GetChildren()

                if backpack and backpack:FindFirstChild("Knife") then
                    hasKnife = true
                else
                    for _, tool in ipairs(characterTools) do
                        if tool:IsA("Tool") and tool.Name == "Knife" then
                            hasKnife = true
                            break
                        end
                    end
                end

                -- Màu sắc theo Knife
                text.Color = hasKnife and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(0, 255, 255)
                text.Position = Vector2.new(pos.X, pos.Y)
                text.Visible = visible
            else
                text.Visible = false
            end
        end
    end)
end

-- Dừng ESP
local function stopESP()
    if espConnection then
        espConnection:Disconnect()
        espConnection = nil
    end

    for _, text in pairs(drawings) do
        text:Remove()
    end
    drawings = {}
end

-- Nút gui đẹp, nhỏ gọn
Esp:CreateToggle("ESP Player", function(value)
    if value then
        startESP()
    else
        stopESP()
    end
end)




if not game:IsLoaded() then game.Loaded:Wait() end

local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local drawings = {}
local espEnabled = false

-- Lọc các model KHÔNG phải NPC (không có Humanoid)
local function isValidModel(model)
	return model:IsA("Model")
		and model:FindFirstChildWhichIsA("BasePart")
		and not model:FindFirstChildOfClass("Humanoid")
end

-- Lấy vị trí trung tâm model từ BasePart
local function getModelPosition(model)
	local parts = {}
	for _, part in pairs(model:GetDescendants()) do
		if part:IsA("BasePart") then
			table.insert(parts, part.Position)
		end
	end
	if #parts == 0 then return nil end

	local avg = Vector3.new(0, 0, 0)
	for _, pos in pairs(parts) do
		avg += pos
	end
	return avg / #parts
end

-- Tạo ESP Text
local function createESP(model)
	if drawings[model] then return end

	local text = Drawing.new("Text")
	text.Visible = true
	text.Size = 13
	text.Center = true
	text.Outline = true
	text.Font = 2
	text.Color = Color3.fromRGB(255, 255, 255)

	drawings[model] = text
end

-- Xoá ESP khi model bị xoá
local function removeESP(model)
	if drawings[model] then
		drawings[model]:Remove()
		drawings[model] = nil
	end
end

-- Dò tất cả các model tĩnh
local function scanModels()
	for _, model in ipairs(workspace:GetDescendants()) do
		if isValidModel(model) then
			createESP(model)
		end
	end
end

-- Render ESP mỗi frame nếu bật
RunService.RenderStepped:Connect(function()
	if not espEnabled then
		for model, esp in pairs(drawings) do
			esp.Visible = false
		end
		return
	end

	for model, esp in pairs(drawings) do
		if model and model.Parent and isValidModel(model) then
			local pos = getModelPosition(model)
			if pos then
				local screenPos, onScreen = Camera:WorldToViewportPoint(pos)
				if onScreen then
					esp.Position = Vector2.new(screenPos.X, screenPos.Y)
					esp.Text = model.Name
					esp.Visible = true
				else
					esp.Visible = false
				end
			else
				esp.Visible = false
			end
		else
			removeESP(model)
		end
	end
end)

-- Quét lại model mỗi 5 giây nếu bật
task.spawn(function()
	while true do
		if espEnabled then
			scanModels()
		end
		task.wait(5)
	end
end)

-- 🟩 Toggle ESP Model dùng GUI của bạn
Esp:CreateToggle("ESP Model", function(value)
	espEnabled = value
	if not value then
		for model, esp in pairs(drawings) do
			esp.Visible = false
		end
	end
end)



--// Dịch vụ
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local enableESP = false
local drawings = {}

--// GUI Toggle
Esp:CreateToggle("ESP All Map Parts", function(state)
    enableESP = state
    print("ESP All Map Parts:", state)

    if not state then
        for _, draw in ipairs(drawings) do
            draw:Remove()
        end
        drawings = {}
    end
end)

--// Kiểm tra object có phải là Part hiển thị
local function isDrawablePart(obj)
    -- Loại bỏ part thuộc về Player
    local plrChar = obj:FindFirstAncestorOfClass("Model")
    if plrChar and Players:GetPlayerFromCharacter(plrChar) then
        return false
    end

    return obj:IsA("BasePart")
        and obj.Transparency < 1
        and obj:IsDescendantOf(workspace)
        and obj.Name ~= ""
end

--// Render ESP
RunService.RenderStepped:Connect(function()
    if not enableESP then return end

    -- Clear ESP trước mỗi frame
    for _, draw in ipairs(drawings) do
        draw:Remove()
    end
    drawings = {}

    -- Vị trí nhân vật
    local character = LocalPlayer.Character
    local root = character and character:FindFirstChild("HumanoidRootPart")
    if not root then return end

    for _, obj in ipairs(workspace:GetDescendants()) do
        if isDrawablePart(obj) then
            local distance = (obj.Position - root.Position).Magnitude
            if distance <= 25 then -- Chỉ vẽ khi trong bán kính 25m
                local pos, visible = Camera:WorldToViewportPoint(obj.Position)
                if visible then
                    local text = Drawing.new("Text")
                    text.Text = obj:GetFullName()
                    text.Position = Vector2.new(pos.X, pos.Y)
                    text.Size = 14
                    text.Color = Color3.fromRGB(255, 255, 0)
                    text.Center = true
                    text.Outline = true
                    text.Visible = true

                    table.insert(drawings, text)
                end
            end
        end
    end
end)



--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local lp = Players.LocalPlayer

--// Variables
local diamondESPEnabled = false
local drawings = {}

--// Toggle ESP Button
Esp:CreateToggle("ESP Diamond", function(value)
    diamondESPEnabled = value
    print("ESP Diamond:", value)

    -- Clear all drawings when toggle is off
    if not value then
        for _, drawing in ipairs(drawings) do
            if drawing.Text then
                pcall(function()
                    drawing.Text:Remove()
                end)
            end
        end
        drawings = {}
    end
end)

--// ESP Update Loop
RunService.RenderStepped:Connect(function()
    if not diamondESPEnabled then return end

    -- Clear previous drawings
    for _, drawing in ipairs(drawings) do
        if drawing.Text then
            pcall(function()
                drawing.Text:Remove()
            end)
        end
    end
    drawings = {}

    -- Scan all models in workspace
    for _, model in ipairs(workspace:GetDescendants()) do
        if model:IsA("Model") and model.Name:lower():find("diamond") then
            local part = model:FindFirstChildWhichIsA("BasePart")
            if part then
                local pos, onScreen = Camera:WorldToViewportPoint(part.Position)
                if onScreen then
                    local text = Drawing.new("Text")
                    text.Text = model.Name
                    text.Position = Vector2.new(pos.X, pos.Y)
                    text.Size = 16
                    text.Color = Color3.fromRGB(0, 255, 255)
                    text.Center = true
                    text.Outline = true
                    text.Visible = true

                    table.insert(drawings, {Text = text})
                end
            end
        end
    end
end)






